{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","handleSortChange","setState","handleReverseChange","resetState","this","goods","visibleGoods","ALPHABET","sort","a","b","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","classNames","onClick","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAuCE,IAAME,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,iBAAmB,SAACF,GAClB,EAAKG,SAAS,CACZH,cARN,EAYEI,oBAAsB,WACpB,EAAKD,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBAdzB,EAkBEM,WAAa,WACX,EAAKF,SAAS,CACZJ,YAAY,EACZC,SAAUL,EAASM,QArBzB,4CAyBE,WAAU,IAAD,OACP,EAAiCK,KAAKR,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdO,EAvDH,SACLA,EADK,GAGJ,IADCP,EACF,EADEA,SAAUD,EACZ,EADYA,WAENS,EAAY,YAAOD,GAEzB,OAAQP,GACN,KAAKL,EAASc,SACZD,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC5C,MACF,KAAKjB,EAASmB,OACZN,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,UAS7C,OAJIhB,GACFS,EAAaQ,UAGRR,EAmCSS,CAAkBrB,EAAiBU,KAAKR,OAEtD,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CACE,WAAYpB,IAAaL,EAASc,WAGtCY,QAAS,WACP,EAAKnB,iBAAiBP,EAASc,WAVnC,iCAgBA,wBACEU,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CACE,WAAYpB,IAAaL,EAASmB,SAGtCO,QAAS,WACP,EAAKnB,iBAAiBP,EAASmB,SAVnC,4BAgBA,wBACEK,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CACE,YAAarB,IAGjBsB,QAASf,KAAKF,oBAThB,sBAcEL,GAAcC,IAAaL,EAASM,OACpC,wBACEkB,KAAK,SACLD,UAAWE,IACT,SACA,UACA,YAEFC,QAASf,KAAKD,WAPhB,sBAcJ,6BACE,6BACGE,EAAMe,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,iBAjGrB,GAAyBC,aCtDzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.43188101.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((a, b) => a.localeCompare(b));\n      break;\n    case SortType.LENGTH:\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n    default:\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handleSortChange = (sortType: SortType) => {\n    this.setState({\n      sortType,\n    });\n  };\n\n  handleReverseChange = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  resetState = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const goods = getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-info',\n              {\n                'is-light': sortType !== SortType.ALPHABET,\n              },\n            )}\n            onClick={() => {\n              this.handleSortChange(SortType.ALPHABET);\n            }}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-info',\n              {\n                'is-light': sortType !== SortType.LENGTH,\n              },\n            )}\n            onClick={() => {\n              this.handleSortChange(SortType.LENGTH);\n            }}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-info',\n              {\n                'is-light': !isReversed,\n              },\n            )}\n            onClick={this.handleReverseChange}\n          >\n            Reverse\n          </button>\n\n          {(isReversed || sortType !== SortType.NONE) && (\n            <button\n              type=\"button\"\n              className={classNames(\n                'button',\n                'is-info',\n                'is-light',\n              )}\n              onClick={this.resetState}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {goods.map(good => (\n              <li\n                key={good}\n                data-cy=\"Good\"\n              >\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}